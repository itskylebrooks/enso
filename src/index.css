/* Import IBM Plex Sans with italic variants so italic font-style renders correctly */
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-family: 'IBM Plex Sans', sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color-scheme: light;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --color-bg: #ffffff;
  --color-text: #000000;
  --color-surface: #ffffff;
  --color-surface-hover: #f4f4f5;
  --color-border: rgba(0, 0, 0, 0.08);
  --color-border-hover: rgba(0, 0, 0, 0.15);
  --color-muted: #4b5563;
  --color-subtle: #6b7280;

  /* Card shadow colors adapt to light/dark mode. In light mode use a dark shadow; in dark mode use a light (subtle) shadow */
  --card-shadow-color: 15, 23, 42; /* rgb components for dark shadow */
  --card-shadow-alpha: 0.12; /* default alpha for light mode */
  /* Layered shadow for better depth: larger soft shadow + smaller mid shadow */
  --card-shadow: 0 14px 44px -12px rgba(var(--card-shadow-color), var(--card-shadow-alpha)), 0 6px 18px -8px rgba(var(--card-shadow-color), 0.08);

  /* Unified focus halo (adapts to theme) */
  --focus-halo-color: rgba(0, 0, 0, 0.55);
  --focus-halo-size: 2px;
}

.dark {
  color-scheme: dark;
  --color-bg: #000000;
  --color-text: #ffffff;
  --color-surface: #0b0b0b;
  --color-surface-hover: #1f1f1f;
  --color-border: rgba(255, 255, 255, 0.18);
  --color-border-hover: rgba(255, 255, 255, 0.25);
  --color-muted: rgba(255, 255, 255, 0.72);
  --color-subtle: rgba(255, 255, 255, 0.62);

  /* In dark mode, use a light/white layered shadow with slightly higher alpha so it remains visible */
  --card-shadow-color: 255, 255, 255;
  --card-shadow-alpha: 0.16;
  /* Add a stronger near shadow for dark mode so lift is visible on black backgrounds */
  --card-shadow: 0 12px 36px -8px rgba(var(--card-shadow-color), var(--card-shadow-alpha)), 0 6px 18px -4px rgba(var(--card-shadow-color), 0.12), 0 2px 6px -2px rgba(var(--card-shadow-color), 0.06);

  /* In dark mode use a light halo with similar perceived thickness */
  --focus-halo-color: rgba(255, 255, 255, 0.6);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  min-height: 100vh;
  background-color: var(--color-bg);
  color: var(--color-text);
  transition: background-color 0.2s ease, color 0.2s ease;
}

.app-bg {
  background-color: var(--color-bg);
  color: var(--color-text);
}

.surface {
  background-color: var(--color-surface);
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.surface-hover:hover {
  background-color: var(--color-surface-hover);
}

.surface-border {
  border-color: var(--color-border);
}

.border-adaptive {
  border-color: var(--color-border);
}

.hover-border-adaptive:hover {
  border-color: var(--color-border-hover);
}

.text-muted {
  color: var(--color-muted);
}

.text-subtle {
  color: var(--color-subtle);
}

.btn-tonal {
  background-color: var(--color-surface);
  border-color: var(--color-border);
  color: var(--color-text);
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.btn-tonal:hover:not(:disabled) {
  background-color: var(--color-surface-hover);
}

.btn-tonal:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.btn-contrast {
  background-color: var(--color-text);
  color: var(--color-bg);
  border-color: var(--color-text);
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.btn-contrast:hover:not(:disabled) {
  filter: brightness(0.9);
}

.chip-passive {
  color: var(--color-subtle);
}

.nav-divider {
  background-color: var(--color-border);
}

.hover-border-contrast:hover {
  border-color: var(--color-text);
}

/* Ensure native checkboxes/radios use theme color (not blue) */
input[type="checkbox"],
input[type="radio"] {
  accent-color: var(--color-text);
}

.divide-border > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--color-border);
}

.border-contrast {
  border-color: var(--color-text);
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  font: inherit;
}

:root {
  --motion-duration-short: 160ms;
  --motion-duration-medium: 200ms;
  --motion-ease: cubic-bezier(0.22, 1, 0.36, 1);
}

@media (prefers-reduced-motion: reduce) {
  :root {
    --motion-duration-short: 1ms;
    --motion-duration-medium: 1ms;
  }
}

.transition-soft {
  transition-property: color, background-color, border-color, box-shadow, transform, opacity;
  transition-duration: var(--motion-duration-short);
  transition-timing-function: var(--motion-ease);
}

.motion-ease {
  transition-timing-function: var(--motion-ease);
}

.motion-lift {
  transition-property: transform, box-shadow, border-color, background-color, color;
  transition-duration: var(--motion-duration-short);
  transition-timing-function: var(--motion-ease);
}

.motion-lift:hover {
  transform: translateY(-4px);
  box-shadow: var(--card-shadow);
}

@media (prefers-reduced-motion: reduce) {
  .motion-lift:hover {
    transform: none;
    box-shadow: none;
  }
}

/* Prevent iOS Safari input zoom on small screens by ensuring >=16px font-size */
@media (max-width: 480px) {
  input,
  textarea,
  select {
    font-size: 16px !important; /* override text-sm to avoid zoom */
  }
}

/* When a card should be visually de-emphasized while an inline menu is open */
.blur-card {
  filter: blur(2px);
  -webkit-filter: blur(2px);
  opacity: 0.88;
}

/* Hide scrollbar while maintaining scroll functionality */
.scrollbar-hide {
  /* Firefox */
  scrollbar-width: none;
  
  /* Webkit browsers (Chrome, Safari, Edge) */
  -ms-overflow-style: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Unified, animated focus halo for inputs/selects */
.focus-halo {
  transition: border-color var(--motion-duration-short) var(--motion-ease),
              box-shadow var(--motion-duration-short) var(--motion-ease),
              background-color var(--motion-duration-short) var(--motion-ease);
}

.focus-halo:focus,
.focus-halo:focus-visible {
  outline: none;
  /* A single halo that hugs the element to avoid a double frame */
  box-shadow: 0 0 0 var(--focus-halo-size) var(--focus-halo-color);
  border-color: var(--focus-halo-color);
}

/* Shake animation */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-6px); }
  75% { transform: translateX(6px); }
}

.shake-on-hover:hover {
  animation: shake 0.6s ease-in-out;
}

/* Jump forward animation */
.jump-on-hover {
  transition: transform 0.2s ease-out;
}

.jump-on-hover:hover {
  transform: translateY(-4px) scale(1.02);
}

/* Subtle card hover shadow utility used by content cards across the app.
   - applies a small upward lift and adaptive shadow that changes with the theme
   - respects prefers-reduced-motion
*/
.card-hover-shadow {
  transition: transform 180ms var(--motion-ease), box-shadow 180ms var(--motion-ease), border-color 180ms var(--motion-ease);
}
.card-hover-shadow:hover {
  /* Only show adaptive shadow on hover. No translation to keep cards stationary. */
  transform: none;
  box-shadow: var(--card-shadow);
}
@media (prefers-reduced-motion: reduce) {
  .card-hover-shadow:hover {
    transform: none;
    box-shadow: none;
  }
}

/* Adaptive pill that reads inline CSS variables for bg and hover bg */
.pill-adaptive {
  background-color: var(--pill-bg);
  transition: background-color 180ms var(--motion-ease), color 160ms var(--motion-ease);
}
.pill-adaptive:hover {
  background-color: var(--pill-bg-hover);
}

/* Ensure the top-level header uses pure black in dark mode (override off-black surface)
   This keeps other surfaces at their current dark-tone while making the header fully black. */
.dark header.surface {
  background-color: #000000;
}
